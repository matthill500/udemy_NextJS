{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matthill/meetups/pages/[meetupId]/index.js\";\nimport MongoClient from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 8\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://admin:secret123@cluster0.e6bvz.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://admin:secret123@cluster0.e6bvz.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: meetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/matthill/meetups/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","console","log","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,SAAxB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACG,QAAC,YAAD;AACA,IAAA,KAAK,EAAEA,KAAK,CAACG,UAAN,CAAiBC,KADxB;AAEA,IAAA,KAAK,EAAEJ,KAAK,CAACG,UAAN,CAAiBE,KAFxB;AAGA,IAAA,OAAO,EAAEL,KAAK,CAACG,UAAN,CAAiBG,OAH1B;AAIA,IAAA,WAAW,EAAEN,KAAK,CAACG,UAAN,CAAiBI;AAJ9B;AAAA;AAAA;AAAA;AAAA,UADH;AAQH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,8FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AAAT,KAAL,CAAlB;AAFJ,GAAP;AAKH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAsC;AAEzC,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,8FAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMS,MAAM,GAAG,MAAMV,iBAAiB,CAACgB,OAAlB,CAA0B;AAACZ,IAAAA,GAAG,EAAEQ;AAAN,GAA1B,CAArB;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEAjB,EAAAA,OAAO,CAACC,GAAR,CAAYsB,QAAZ;AAEA,SAAO;AACHxB,IAAAA,KAAK,EAAE;AACHG,MAAAA,UAAU,EAAEmB;AADT;AADJ,GAAP;AAKH;AAED,eAAevB,aAAf","sourcesContent":["import MongoClient from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n    console.log(props);\n    return (\n       <MeetupDetail \n       image={props.meetupData.image} \n       title={props.meetupData.title} \n       address={props.meetupData.address} \n       description={props.meetupData.description} \n       />\n    );\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://admin:secret123@cluster0.e6bvz.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()},\n        })),\n    };\n}\n\nexport async function getStaticProps(context){\n\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect('mongodb+srv://admin:secret123@cluster0.e6bvz.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n    const meetup = await meetupsCollection.findOne({_id: meetupId});\n\n    client.close();\n\n    console.log(meetupId);\n\n    return {\n        props: {\n            meetupData: meetup\n        }\n    }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}