{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/matthill/meetups/pages/[meetupId]/index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 8\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/matthill/meetups/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","image","title","address","description"],"mappings":";;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACG,QAAC,YAAD;AACA,IAAA,KAAK,EAAEA,KAAK,CAACC,KADb;AAEA,IAAA,KAAK,EAAED,KAAK,CAACE,KAFb;AAGA,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHf;AAIA,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJnB;AAAA;AAAA;AAAA;AAAA,UADH;AAQH;;KATQL,a;;AAiDT,eAAeA,aAAf","sourcesContent":["import {MongoClient} from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n    return (\n       <MeetupDetail \n       image={props.image} \n       title={props.title} \n       address={props.address} \n       description={props.description} \n       />\n    );\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://admin:secret123@cluster0.e6bvz.mongodb.net/meetups?retryWrites=true&w=majority');\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()},\n        })),\n    };\n}\n\nexport async function getStaticProps(context){\n\n    const meetupId = context.params.meetupId;\n\n    console.log(\"id: \"+meetupId);\n\n    const client = await MongoClient.connect('mongodb+srv://admin:secret123@cluster0.e6bvz.mongodb.net/meetups?retryWrites=true&w=majority',\n    { useUnifiedTopology: true });\n    const db = client.db();\n    const meetupsCollection = db.collection('meetups');\n    const meetup = await meetupsCollection.findOne({}, {_id: meetupId});\n\n    console.log(meetup);\n\n    client.close();\n\n    return {\n        props: {\n            meetupData: meetup,\n        },\n    };\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}